<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="opal.dao.DocumentMapper" >
  <resultMap id="BaseResultMap" type="opal.model.Document" >
    <id column="docid" property="docid" jdbcType="INTEGER" />
    <result column="processid" property="processid" jdbcType="INTEGER" />
    <result column="docprotype" property="docprotype" jdbcType="VARCHAR" />
    <result column="doctype" property="doctype" jdbcType="VARCHAR" />
    <result column="docname" property="docname" jdbcType="VARCHAR" />
    <result column="docroot" property="docroot" jdbcType="VARCHAR" />
    <result column="downloadcount" property="downloadcount" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    docid, processid, docprotype, doctype, docname, docroot, downloadcount
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from doc_doc
    where docid = #{docid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from doc_doc
    where docid = #{docid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="opal.model.Document" >
    insert into doc_doc (docid, processid, docprotype, 
      doctype, docname, docroot, 
      downloadcount)
    values (#{docid,jdbcType=INTEGER}, #{processid,jdbcType=INTEGER}, #{docprotype,jdbcType=VARCHAR}, 
      #{doctype,jdbcType=VARCHAR}, #{docname,jdbcType=VARCHAR}, #{docroot,jdbcType=VARCHAR}, 
      #{downloadcount,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="opal.model.Document" >
    insert into doc_doc
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="docid != null" >
        docid,
      </if>
      <if test="processid != null" >
        processid,
      </if>
      <if test="docprotype != null" >
        docprotype,
      </if>
      <if test="doctype != null" >
        doctype,
      </if>
      <if test="docname != null" >
        docname,
      </if>
      <if test="docroot != null" >
        docroot,
      </if>
      <if test="downloadcount != null" >
        downloadcount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="docid != null" >
        #{docid,jdbcType=INTEGER},
      </if>
      <if test="processid != null" >
        #{processid,jdbcType=INTEGER},
      </if>
      <if test="docprotype != null" >
        #{docprotype,jdbcType=VARCHAR},
      </if>
      <if test="doctype != null" >
        #{doctype,jdbcType=VARCHAR},
      </if>
      <if test="docname != null" >
        #{docname,jdbcType=VARCHAR},
      </if>
      <if test="docroot != null" >
        #{docroot,jdbcType=VARCHAR},
      </if>
      <if test="downloadcount != null" >
        #{downloadcount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="opal.model.Document" >
    update doc_doc
    <set >
      <if test="processid != null" >
        processid = #{processid,jdbcType=INTEGER},
      </if>
      <if test="docprotype != null" >
        docprotype = #{docprotype,jdbcType=VARCHAR},
      </if>
      <if test="doctype != null" >
        doctype = #{doctype,jdbcType=VARCHAR},
      </if>
      <if test="docname != null" >
        docname = #{docname,jdbcType=VARCHAR},
      </if>
      <if test="docroot != null" >
        docroot = #{docroot,jdbcType=VARCHAR},
      </if>
      <if test="downloadcount != null" >
        downloadcount = #{downloadcount,jdbcType=INTEGER},
      </if>
    </set>
    where docid = #{docid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="opal.model.Document" >
    update doc_doc
    set processid = #{processid,jdbcType=INTEGER},
      docprotype = #{docprotype,jdbcType=VARCHAR},
      doctype = #{doctype,jdbcType=VARCHAR},
      docname = #{docname,jdbcType=VARCHAR},
      docroot = #{docroot,jdbcType=VARCHAR},
      downloadcount = #{downloadcount,jdbcType=INTEGER}
    where docid = #{docid,jdbcType=INTEGER}
  </update>
  <select id="getAll" resultMap="BaseResultMap">
    SELECT * FROM doc_doc
  </select>
</mapper>